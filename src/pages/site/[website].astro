---
import MainLayout from "@/layouts/main-layout.astro";
import { WebsiteStats } from "@/components/WebsiteStats";
import { createClient } from '@supabase/supabase-js';

// Mark this page for static generation
export const prerender = true;

// Create Supabase client inside the function
const supabase = createClient(
  import.meta.env.NEXT_PUBLIC_SUPABASE_URL,
  import.meta.env.SUPABASE_SERVICE_ROLE_KEY
);

// Generate static paths for all monitored websites
export async function getStaticPaths() {
  try {
    // Method 2: Use pagination to get all sites
    let allSites = [];
    let page = 0;
    const pageSize = 1000;
    
    while (true) {
      const { data: siteBatch, error } = await supabase
        .from('monitored_sites')
        .select('domain')
        .eq('is_active', true)
        .range(page * pageSize, (page + 1) * pageSize - 1)
        .order('domain');

      if (error) {
        console.error('Supabase error:', error);
        break;
      }

      if (!siteBatch || siteBatch.length === 0) {
        break; // No more sites to fetch
      }

      allSites = [...allSites, ...siteBatch];
      if (siteBatch.length < pageSize) {
        break; // Last page
      }
      
      page++;
    }

    console.log(`Total sites fetched: ${allSites.length}`);

    // Create paths using the complete list of sites
    return allSites.map(site => ({
      params: { website: site.domain },
      props: { domain: site.domain }
    }));

  } catch (error) {
    console.error('Error fetching sites for static paths:', error);
    return [];
  }
}

// Get the website parameter from the URL
const { website } = Astro.params;
const { domain } = Astro.props;

// Debug log
console.log('Generating static page for:', website);
---

<MainLayout title={`${website} - CO2 Stats`}>
  <section id="data" class="container bg-slate-50 dark:bg-transparent py-4 md:py-6 lg:py-10">
    <div class="mx-auto flex max-w-[58rem] flex-col items-center space-y-4 text-center">
      <h5 class="font-heading text-lg leading-[1.1] sm:text-xl md:text-xl text-muted-foreground">
        Viewing Results For
      </h5>
      <h2 class="font-heading text-3xl leading-[1.1] sm:text-3xl md:text-6xl">
        {website}
      </h2>
      <p class="max-w-[85%] lg:max-w-[55%] leading-normal text-muted-foreground sm:text-lg sm:leading-7 balance-text">
        Let's take a look at the carbon emissions data for{" "}
        <a 
          href={`http://${website}`} 
          class="underline text-gradient_sky-emerald hover:decoration-emerald-500 underline underline-offset-4" 
          target="_blank" 
          rel="noreferrer"
        >
          {website}
        </a>. 
        It is updated nightly and is available at the{" "}
        <a 
          href="https://github.com/ctrimm/co2-emission-tracker" 
          target="_blank" 
          rel="noreferrer" 
          class="decoration-emerald-500 underline underline-offset-4"
        >
          GitHub repo
        </a>.
      </p>
    </div>
  </section>
  
  <WebsiteStats client:load domain={website} />
</MainLayout>
