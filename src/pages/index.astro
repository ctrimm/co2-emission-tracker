---
export const prerender = true;
import { buttonVariants } from "@/components/ui/button";
import { siteConfig } from "@/config/site";
import MainLayout from "@/layouts/main-layout.astro";
import { cn } from "@/lib/utils";
import Icon from "astro-icon";
import { TableWrapper } from "@/components/ui/wrapper";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";

// Get today's date in YYYY-MM-DD format
const today = new Date().toISOString().split('T')[0];

// Fetch data from our API endpoints
const [emissionsResponse, sitesResponse] = await Promise.all([
  fetch(`${import.meta.env.PUBLIC_API_URL}/emissions`),
  fetch(`${import.meta.env.PUBLIC_API_URL}/sites`)
]);

if (!emissionsResponse.ok || !sitesResponse.ok) {
  throw new Error('Failed to fetch data');
}

const { emissions: todaysEmissions, count: totalIndexesRun } = await emissionsResponse.json();
const { sites, count: uniqueSiteCount } = await sitesResponse.json();

const formattedCount = new Intl.NumberFormat('en-US').format(uniqueSiteCount || 0);

// Calculate averages from today's data
const averageGramsPerLoad = todaysEmissions && todaysEmissions.length > 0
  ? todaysEmissions.reduce((acc, cur) => acc + (cur.estimated_co2_grams || 0), 0) / todaysEmissions.length
  : 0;

// Time since midnight EST
const now = new Date();
const estNow = new Date(now.toLocaleString("en-US", {timeZone: "America/New_York"}));
const midnightEst = new Date(estNow);
midnightEst.setHours(0, 0, 0, 0);
const diffHours = Math.floor((Number(now) - Number(midnightEst)) / 1000 / 60 / 60);
const timeSinceMidnight = `~${diffHours} hour${diffHours === 1 ? '' : 's'} ago`;

function formatNumber(num: number) {
  if (num >= 1000000) {
    return (num / 1000000).toFixed(1) + 'MM+';
  } else if (num >= 1000) {
    return (num / 1000).toFixed(1) + 'k+';
  } else {
    return num;
  }
}

// Percentage of Green Hosted Sites
const greenSites = todaysEmissions?.filter(item => item.is_green === true).length || 0;
const totalSites = todaysEmissions?.length || 0;
const greenPercentage = totalSites > 0 
  ? ((greenSites / totalSites) * 100).toFixed(2) 
  : "0.00";

const summaryCardInfo = [
  {
    cardTitle: "Total Indexes Run",
    cardContent: formatNumber(totalIndexesRun),
    cardFooter: timeSinceMidnight,
  },
  {
    cardTitle: "Average CO2",
    cardContent: `${averageGramsPerLoad.toFixed(3)} g`,
    cardFooter: "per 1 view",
  },
  {
    cardTitle: "% Green Hosted",
    cardContent: `${greenPercentage}%`,
    cardFooter: "of indexed sites",
  },
];
---

<MainLayout title="CO2 Web Emissions Tracker">
  <section class="space-y-6 pb-12 pt-16 lg:pt-28 lg:pb-12">
    <div class="container flex max-w-[64rem] flex-col items-center gap-5 text-center">
      <a
        href="https://twitter.com/cdt5058/status/1760840540378071176"
        class={cn(buttonVariants({ variant: "outline", size: "sm" }))}
        target="_blank"
      >
        Follow along on <Icon name="twitter" class="ml-2 size-4" />
      </a>

      <h1 class="font-heading text-4xl font-bold sm:text-5xl md:text-6xl lg:text-7xl !leading-[1.1] text-balance">
        A simple interface to display
        <span class="text-gradient_sky-emerald">
          Website Carbon Emission Data
        </span>
      </h1>

      <p class="max-w-[42rem] leading-normal text-muted-foreground sm:text-xl sm:leading-8 text-balance">
        Currently scanning <span class="font-bold">{formattedCount}</span> sites and their carbon emissions. Cron job run nightly.
      </p>

      <div class="flex justify-center space-x-2 md:space-x-4">
        <a
          href="#how-it-works"
          class={cn(buttonVariants({ size: "lg" }))}
        >
          Read More
        </a>
        <a
          href={siteConfig.links.github}
          target="_blank"
          rel="noreferrer"
          class={cn(buttonVariants({ variant: "outline", size: "lg" }), "px-4")}
        >
          <Icon name="github" class="mr-2 size-5" />
           Add Site
        </a>
      </div>
    </div>
  </section>

  <!-- Scan Summary Section -->
  <section
  id="summary"
  class="container py-8 md:py-12 lg:py-12"
>
  <div
    class="mx-auto flex flex-col items-center space-y-4 text-center"
  >
    <h2 class="font-heading text-3xl leading-[1.1] sm:text-3xl md:text-6xl">
      Quick Glance
    </h2>
    <!-- <p
      class="max-w-[85%] lg:max-w-[55%] leading-normal text-muted-foreground sm:text-lg sm:leading-7 balance-text"
    >
      Quick summary of what we've got indexed.
    </p> -->
  </div>
  <!-- Data Table from the CSV file -->
  <!-- Iterate over emissionsResultsJSON and display in a table -->
  <div class="mx-auto max-w-[64rem] overflow-x-auto pt-8">
    <!-- Individual Cards For Top-Level Metrics -->
    <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3 pt-4 pb-10">
      {summaryCardInfo.map((card) => (
        <Card className="hover:shadow hover:shadow-xl hover:shadow-emerald-500/50">
          <CardHeader>
            <CardTitle className="tracking-tight text-sm font-medium text-center">{card.cardTitle}</CardTitle>
            {card.cardDescription ? <CardDescription>{(card.cardDescription)}</CardDescription> : ''}
          </CardHeader>
          <CardContent className={card.cardClass}>
            <p class="text-6xl font-bold text-center">{card.cardContent}</p>
          </CardContent>
          <CardFooter>
            <p class="m-auto text-xs text-muted-foreground text-center">{card.cardFooter}</p>
          </CardFooter>
        </Card>
      ))}
    </div>
  </div>
</section>

  <!-- Data Table Section + Text -->
  <section
    id="data-table"
    class="container h-[64rem] bg-slate-50 dark:bg-transparent py-8 md:py-12 lg:py-20"
  >
    <div
      class="mx-auto flex max-w-[58rem] flex-col items-center space-y-4 text-center"
    >
      <h2 class="font-heading text-3xl leading-[1.1] sm:text-3xl md:text-6xl">
        The Data
      </h2>
      <p
        class="max-w-[85%] lg:max-w-[55%] leading-normal text-muted-foreground sm:text-lg sm:leading-7 balance-text"
      >
        Let's take a look at the latest data. It is updated nightly and is
        available, in full, at the
        <a
          href={siteConfig.links.github}
          target="_blank"
          rel="noreferrer"
          class="underline underline-offset-4 decoration-emerald-500"
        >
          GitHub repo</a>.
      </p>
      <p
        class="max-w-[85%] lg:max-w-[55%] leading-normal text-muted-foreground sm:text-lg sm:leading-7 balance-text"
      >
        Click on a domain name to see more details about the site.
      </p>
    </div>
    <!-- Data Table from the CSV file -->
    <!-- Iterate over emissionsResultsJSON and display in a table -->
    <div class="mx-auto max-w-[64rem] overflow-x-auto">
      <TableWrapper client:load />
    </div>
  </section>
  <!-- How It Works -->
  <section id="how-it-works" class="container py-8 md:py-12 lg:py-20">
    <div
      class="mx-auto flex max-w-[58rem] flex-col items-center justify-center gap-4 pb-6 text-center"
    >
      <h2 class="font-heading text-3xl leading-[1.1] sm:text-3xl md:text-6xl">
        How It Works
      </h2>
      <p
        class="max-w-[65%] leading-normal text-muted-foreground sm:text-lg sm:leading-7"
      >
        CO2 Web Emissions Tracker leverages a few core techniques and software packages to help generate estimate CO2 Emissions. <br />
        <a
          href="https://developers.thegreenwebfoundation.org/co2js/explainer/methodologies-for-calculating-website-carbon/"
          target="_blank"
          rel="noreferrer"
          class="underline underline-offset-4 decoration-emerald-500"
        >Read More Details Here</a>.

      </p>
    </div>
    <div
      class="mx-auto grid justify-center gap-4 sm:grid-cols-2 md:max-w-[64rem] md:grid-cols-4"
    >
      <div class="relative overflow-hidden rounded-lg border bg-background p-2 hover:drop-shadow-[0_12px_12px_rgba(0,0,0,0.2)] dark:hover:drop-shadow-[0_35px_35px_rgba(255,255,255,0.2)]">
        <div class="flex h-[250px] flex-col justify-between rounded-md p-5">
          <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-database-zap"><ellipse cx="12" cy="5" rx="9" ry="3"/><path d="M3 5V19A9 3 0 0 0 15 21.84"/><path d="M21 5V8"/><path d="M21 12L18 17H22L19 22"/><path d="M3 12A9 3 0 0 0 14.59 14.87"/></svg>
          <div class="space-y-2">
            <h3 class="font-bold">Data Center Usage</h3>
            <p class="text-sm text-muted-foreground">
              15% of Carbon emissions from electricity to power servers, and keep them cool.
            </p>
          </div>
        </div>
      </div>
      <div class="relative overflow-hidden rounded-lg border bg-background p-2 hover:drop-shadow-[0_12px_12px_rgba(0,0,0,0.2)] dark:hover:drop-shadow-[0_35px_35px_rgba(255,255,255,0.2)]">
        <div class="flex h-[250px] flex-col justify-between rounded-md p-5">
          <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-network"><rect x="16" y="16" width="6" height="6" rx="1"/><rect x="2" y="16" width="6" height="6" rx="1"/><rect x="9" y="2" width="6" height="6" rx="1"/><path d="M5 16v-3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3"/><path d="M12 12V8"/></svg>
          <div class="space-y-2">
            <h3 class="font-bold">Network Transfer</h3>
            <p class="text-sm text-muted-foreground">
              14% of Carbon emissions from electricity to power core networks, mobile networks, on-premise wifi, and wired routers.
            </p>
          </div>
        </div>
      </div>
      <div class="relative overflow-hidden rounded-lg border bg-background p-2 hover:drop-shadow-[0_12px_12px_rgba(0,0,0,0.2)] dark:hover:drop-shadow-[0_35px_35px_rgba(255,255,255,0.2)]">
        <div class="flex h-[250px] flex-col justify-between rounded-md p-5">
          <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-monitor-smartphone"><path d="M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8"/><path d="M10 19v-3.96 3.15"/><path d="M7 19h5"/><rect width="6" height="10" x="16" y="12" rx="2"/></svg>
          <div class="space-y-2">
            <h3 class="font-bold">End User Devices</h3>
            <p class="text-sm text-muted-foreground">
              52% of Carbon emissions from electricity to power devices like smartphones, tablets, laptops, desktops, and gaming consoles.
            </p>
          </div>
        </div>
      </div>
      <div class="relative overflow-hidden rounded-lg border bg-background p-2 hover:drop-shadow-[0_12px_12px_rgba(0,0,0,0.2)] dark:hover:drop-shadow-[0_35px_35px_rgba(255,255,255,0.2)]">
        <div class="flex h-[250px] flex-col justify-between rounded-md p-5">
          <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-factory"><path d="M2 20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8l-7 5V8l-7 5V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z"/><path d="M17 18h1"/><path d="M12 18h1"/><path d="M7 18h1"/></svg>
          <div class="space-y-2">
            <h3 class="font-bold">Production</h3>
            <p class="text-sm text-muted-foreground mt-3">
              19% of Carbon emissions from electricity to power production of hardware, software, and infrastructure.
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>
  <section id="open-source" class="container py-8 md:py-12 lg:py-20">
    <div
      class="mx-auto flex max-w-[58rem] flex-col items-center justify-center gap-4 text-center"
    >
      <h2 class="font-heading text-3xl leading-[1.1] sm:text-3xl md:text-6xl">
        Proudly Open Source
      </h2>
      <p
        class="max-w-[85%] leading-normal text-muted-foreground sm:text-lg sm:leading-7"
      >
        CO2 Web Emissions Tracker is open source and powered by open source software. <br />{
          " "
        }
         The code is available on{" "}
        <a
          href={siteConfig.links.github}
          target="_blank"
          rel="noreferrer"
          class="underline underline-offset-4 decoration-emerald-500"
        >
          GitHub</a>.
      </p>
    </div>
  </section>
</MainLayout>

<!-- Smooth Scroll Style -->
<style>
  :global(html) {
    color: hsl(var(--colour-text-hue) var(--colour-text-saturation) var(--colour-text-luminance));
    scroll-behavior: smooth;
  }
  @media (prefers-reduced-motion: reduce) {
    :global(html) {
      scroll-behavior: auto;
    }
  }
</style>
